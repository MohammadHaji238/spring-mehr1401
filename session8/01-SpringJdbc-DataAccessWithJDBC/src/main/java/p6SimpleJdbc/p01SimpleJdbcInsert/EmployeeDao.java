package p6SimpleJdbc.p01SimpleJdbcInsert;

import p1UsingJDBCTemplate.Employee;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;
import org.springframework.stereotype.Repository;

import javax.sql.DataSource;
import java.util.HashMap;
import java.util.Map;

@Repository(value = "simple1")
public class EmployeeDao  implements Dao {

    private SimpleJdbcInsert insertEmployee;

    @Autowired
    public void setDataSource(@Qualifier("dataSource1") DataSource dataSource)
    {
        this.insertEmployee=new SimpleJdbcInsert(dataSource)
                .withTableName("employee")
                .usingGeneratedKeyColumns("id")
                .usingColumns("first_name","last_name","username","password");
    }


    @Override
    public void add() {
        Map<String, Object> parameters = new HashMap();
       // parameters.put("id", 10);
        parameters.put("first_name", "hasan");
        parameters.put("last_name", "hasani");
        parameters.put("username", "hasani");
        parameters.put("password", "123456");
        insertEmployee.execute(parameters);
    }
    public void addRetrievingAutogeneratedKeys() {
        Map<String, Object> parameters = new HashMap();
        parameters.put("first_name", "hasan");
        parameters.put("last_name", "hasani");
        parameters.put("username", "hasani");
        parameters.put("password", "123456");
        Number newId = insertEmployee.executeAndReturnKey(parameters);
        System.out.println(newId);
    }
    public void addWithSqlParameterSource() {//dont insert first name
        SqlParameterSource parameters = new BeanPropertySqlParameterSource(new Employee(12,"dd","ddd","ddd","ddd"));
        Number newId = insertEmployee.executeAndReturnKey(parameters);
        System.out.println(newId);
    }


}
